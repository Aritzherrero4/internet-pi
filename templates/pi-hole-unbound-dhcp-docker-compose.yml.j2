# {{ ansible_managed }}
---
version: "3.5"

{% if domain_name_enable and domain_name and domain_pihole %}
{# Make sure pihole and nginx-proxy are in the same network #}
networks:
  front-tier:
    name: internet-monitoring-front-tier
{% endif %}

# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
services:
  pihole:
    container_name: pihole
    image: cbcrowe/pihole-unbound:latest
    hostname: '{{ pihole_hostname }}'
    domainname: '{{ DOMAIN_NAME }}'
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
{% if domain_name_enable and domain_name and domain_pihole %}
      - "38080:80/tcp"
{% else %}
      - "80:80/tcp"
{% endif %}
      - "5335:5335/tcp" # Uncomment to enable unbound access on local server
      - "443:443/tcp"
    environment:
      TZ: '{{ pihole_timezone }}'
      WEBPASSWORD: '{{ pihole_password }}'
      ServerIP: '{{ MACVLAN_SERVER_IP }}'
      PIHOLE_DNS_: 127.0.0.1#5335
      DHCP_ACTIVE: "true"
      DHCP_START: "192.168.0.20"
      DHCP_END: "192.168.0.240"
      DHCP_ROUTER: "192.168.0.1"
      PIHOLE_DOMAIN: '{{ REV_SERVER_DOMAIN }}'
      DHCP_rapid_commit: "true"
      DHCP_IPv6: "true"
      DNS_BOGUS_PRIV: "true"
      DNS_FQDN_REQUIRED: "true"
      DHCP_LEASETIME: 23
      #CUSTOM_CACHE_SIZE: 20000 # 1/2 of the number of daily requests
      DNSSEC: "false" # Recommended if using unbound
      DNSMASQ_LISTENING: single
{% if domain_name_enable and domain_name and domain_pihole %}
      VIRTUAL_HOST: {{ domain_pihole }}.{{ domain_name }}
      VIRTUAL_PORT: 80
      PROXY_LOCATION: {{ domain_pihole }}
    networks:
      - front-tier
{% endif %}
    volumes:
      - './etc-pihole/:/etc/pihole/'
      - './etc-dnsmasq.d/:/etc/dnsmasq.d/'
      #- './etc-unbound:/etc/unbound'
    networks:
      pihole_net:
        ipv4_address: '{{ MACVLAN_SERVER_IP }}'
    cap_add:
      - NET_ADMIN
{% if domain_name_enable and domain_name %}
    # adds hostname mappings to pihole /etc/hosts file
    extra_hosts:
      # # LAN hostnames for other docker containers using nginx-proxy
      - "{{ domain_name }}:{{ ansible_facts['default_ipv4']['address'] }}"
{% if domain_name_enable and domain_name and domain_pihole %}
      - "{{ domain_pihole }}.{{ domain_name }}:{{ ansible_facts['default_ipv4']['address'] }}"
{% endif %}
{% if domain_name_enable and domain_name and domain_grafana %}
      - "{{ domain_grafana }}.{{ domain_name }}:{{ ansible_facts['default_ipv4']['address'] }}"
{% endif %}
{% if domain_name_enable and domain_name and domain_prometheus %}
      - "{{ domain_prometheus }}.{{ domain_name }}:{{ ansible_facts['default_ipv4']['address'] }}"
{% endif %}
{% endif %}
    restart: unless-stopped
networks:
  pihole_net:
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: 192.168.0.0/24
